/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ec.espe.edu.rolepaymentsystem.view;

import ec.espe.edu.rolepaymentsystem.model.Constants;
import ec.espe.edu.rolepaymentsystem.model.RatesParametersUpdate;
import ec.espe.edu.rolepaymentsystem.model.SalaryUpdate;
import ec.espe.edu.rolepaymentsystem.util.EmployeeToMongo;
import ec.espe.edu.rolepaymentsystem.util.MongoDBClient;
import ec.espe.edu.rolepaymentsystem.util.Validations;
import javax.swing.JOptionPane;

/**
 *
 * @author Code Master
 */
public class FrmConfigureRatesandParameters extends javax.swing.JFrame {
Validations validations=new Validations();
    /**
     * Creates new form FrmConfigureRatesandParameters
     */
    public FrmConfigureRatesandParameters() {
        initComponents();
    validations.addKeyListener(txtIessPercentage, false);
    validations.addKeyListener(txtReserveFundsPercentage, false);
    validations.addKeyListener(txtOvertimeHourIncrease, false);
    validations.addKeyListener(txtEmployerContributionPercentage, false);
    }
    private void clearFields() {
        txtIessPercentage.setText(""); 
        txtReserveFundsPercentage.setText("");
        txtOvertimeHourIncrease.setText("");
        txtEmployerContributionPercentage.setText("");
        txtRegularHoursPerMonth.setText("");    
    }
    
    private boolean validateFields() {
        boolean isValid = true;
    StringBuilder errorMessage = new StringBuilder("Error: Los siguientes campos son inválidos o están vacíos:\n");

    String[] numericFields = {
        txtIessPercentage.getText(),
        txtReserveFundsPercentage.getText(),
        txtOvertimeHourIncrease.getText(),
        txtEmployerContributionPercentage.getText(),
        txtRegularHoursPerMonth.getText()
    };
    String[] fieldNames = {
        "Tasa de Contribución IESS",
        "Tasa de Fondos de Reserva",
        "Incremento de Horas Extra",
        "Tasa de Contribución del Empleador",
        "Horas regulares por mes"
    };

    for (int i = 0; i < numericFields.length; i++) {
        if (!validations.getDoubleInput(numericFields[i])) {
            isValid = false;
            errorMessage.append("- ").append(fieldNames[i]).append("\n");
        }
    }

    if (!isValid) {
        JOptionPane.showMessageDialog(this, errorMessage.toString(), "Error de validación", JOptionPane.ERROR_MESSAGE);
    }

    return isValid;
}

    private boolean confirmUpdate() {
        int response = JOptionPane.showConfirmDialog(
            this,
            "¿Está seguro de que quiere actualizar las tasas y parámetros?",
            "Confirmación",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE
        );
        return response == JOptionPane.YES_OPTION;
    }
    private void updateRatesAndParameters(double newIessPercentage, double newReserveFundsPercentage, double newOvertimeHourIncrease, double newEmployerContributionPercentage, int newRegularHoursPerMonth) {
    double oldIessPercentage = Constants.getIessPercentage();
    double oldReserveFundsPercentage = Constants.getReserveFundsPercentage();
    double oldOvertimeHourIncrease = Constants.getOvertimeHourIncrease();
    double oldEmployerContributionPercentage = Constants.getEmployerContributionPercentage();
    int oldRegularHoursPerMonth = Constants.getRegularHoursPerMonth();

    RatesParametersUpdate update = new RatesParametersUpdate(
        oldIessPercentage, newIessPercentage,
        oldReserveFundsPercentage, newReserveFundsPercentage,
        oldOvertimeHourIncrease, newOvertimeHourIncrease,
        oldEmployerContributionPercentage, newEmployerContributionPercentage,
        oldRegularHoursPerMonth, newRegularHoursPerMonth
    );

    MongoDBClient mongoDBClient = new MongoDBClient();
    EmployeeToMongo mongo = new EmployeeToMongo(mongoDBClient);
    mongo.saveRatesParametersUpdate(update);

    Constants.setIessPercentage(newIessPercentage);
    Constants.setReserveFundsPercentage(newReserveFundsPercentage);
    Constants.setOvertimeHourIncrease(newOvertimeHourIncrease);
    Constants.setEmployerContributionPercentage(newEmployerContributionPercentage);
    Constants.setRegularHoursPerMonth(newRegularHoursPerMonth);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnConfirm = new javax.swing.JButton();
        txtIessPercentage = new javax.swing.JTextField();
        txtRegularHoursPerMonth = new javax.swing.JTextField();
        txtReserveFundsPercentage = new javax.swing.JTextField();
        txtOvertimeHourIncrease = new javax.swing.JTextField();
        txtEmployerContributionPercentage = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Configurar Tasas y Parámetros");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(58, 58, 58))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jLabel2.setText("Tasa de Contribución IESS (%):     ");

        jLabel3.setText("Tasa de Fondos de Reserva (%):");

        jLabel4.setText("Incremento de Horas Extra (factor):");

        jLabel5.setText(" Tasa de Contribución del Empleador (%):");

        jLabel6.setText("Horas regulares por mes: ");

        btnConfirm.setBackground(new java.awt.Color(0, 153, 153));
        btnConfirm.setText("Confirmar");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        txtIessPercentage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIessPercentageActionPerformed(evt);
            }
        });

        txtRegularHoursPerMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRegularHoursPerMonthActionPerformed(evt);
            }
        });

        txtReserveFundsPercentage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtReserveFundsPercentageActionPerformed(evt);
            }
        });

        txtOvertimeHourIncrease.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOvertimeHourIncreaseActionPerformed(evt);
            }
        });

        txtEmployerContributionPercentage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmployerContributionPercentageActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(0, 153, 153));
        btnBack.setText("Atras");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtReserveFundsPercentage)
                            .addComponent(txtOvertimeHourIncrease)
                            .addComponent(txtRegularHoursPerMonth)
                            .addComponent(txtEmployerContributionPercentage)
                            .addComponent(txtIessPercentage, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(btnConfirm)
                        .addGap(63, 63, 63)
                        .addComponent(btnBack)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIessPercentage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtReserveFundsPercentage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtOvertimeHourIncrease, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEmployerContributionPercentage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtRegularHoursPerMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirm)
                    .addComponent(btnBack))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        double newIessPercentage =0.0;
        double newReserveFundsPercentage=0.0;
        double newOvertimeHourIncrease=0.0;
        double newEmployerContributionPercentage=0.0;
        int newRegularHoursPerMonth=0;
        if (!validateFields()) {
            return;
        }
        try {
        newIessPercentage = Double.parseDouble(txtIessPercentage.getText());
         newReserveFundsPercentage = Double.parseDouble(txtReserveFundsPercentage.getText());
        newOvertimeHourIncrease = Double.parseDouble(txtOvertimeHourIncrease.getText());
        newEmployerContributionPercentage = Double.parseDouble(txtEmployerContributionPercentage.getText());
         newRegularHoursPerMonth = Integer.parseInt(txtRegularHoursPerMonth.getText());

        if (confirmUpdate()) {
            updateRatesAndParameters(newIessPercentage, newReserveFundsPercentage, newOvertimeHourIncrease, newEmployerContributionPercentage, newRegularHoursPerMonth);
            JOptionPane.showMessageDialog(this, "Las tasas y parámetros han sido actualizados exitosamente.");
            clearFields();
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese valores numéricos válidos para todos los campos.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void txtIessPercentageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIessPercentageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIessPercentageActionPerformed

    private void txtRegularHoursPerMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRegularHoursPerMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRegularHoursPerMonthActionPerformed

    private void txtReserveFundsPercentageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtReserveFundsPercentageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtReserveFundsPercentageActionPerformed

    private void txtOvertimeHourIncreaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOvertimeHourIncreaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOvertimeHourIncreaseActionPerformed

    private void txtEmployerContributionPercentageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmployerContributionPercentageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmployerContributionPercentageActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        if(true){//read users from database and compare used nameand
            FrmRolePaymentSystem frmRolePlaymentSystem=new FrmRolePaymentSystem();
            this.setVisible(false);
            frmRolePlaymentSystem.setVisible(true);
        }
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmConfigureRatesandParameters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmConfigureRatesandParameters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmConfigureRatesandParameters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmConfigureRatesandParameters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmConfigureRatesandParameters().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField txtEmployerContributionPercentage;
    private javax.swing.JTextField txtIessPercentage;
    private javax.swing.JTextField txtOvertimeHourIncrease;
    private javax.swing.JTextField txtRegularHoursPerMonth;
    private javax.swing.JTextField txtReserveFundsPercentage;
    // End of variables declaration//GEN-END:variables
}
